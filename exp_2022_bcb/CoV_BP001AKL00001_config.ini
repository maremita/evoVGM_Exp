[io]
# output_path is used to save training data, scores and figures
output_path = ../exp_outputs/CoV_BP001AKL00001
scores_from_file = True

[data]
# Use validation data along fitting and for generating step
validation = False

# Get data from FASTA files
sim_data = False
sim_from_fasta = False
fasta_fit_file = ../example_data/CoV/Cov_gene_S_Gblocks_Cleaned_6seqs.fasta
fasta_val_file = False

## evoVGM.py will use the evo params for comparison with
## its infered parameters
branch_lengths = 0.03027,0.349819,0.164930,0.147524,0.33715,0.04247
# Substitution rates
#        AG     AC      AT   GC     GT     CT
rates = 0.225, 0.106, 0.164, 0.064, 0.070, 0.369
# Relative frequencies
#        A     C      G      T
freqs = 0.288, 0.200, 0.190, 0.326

[vb_model]
# jc69 := EvoVGM_JC69: infer a and b latent variables
# k80  := EvoVGM_K80 : infer a, b, k latent variables
# gtr  := EvoVGM_GTR : infer a, b, r, f latent variables
evomodel = gtr

[hyperparams]
nb_replicates = 10
alpha_kl = 0.00001
nb_samples = 100
hidden_size = 32
nb_layers = 3
sample_temp = 0.1
n_epochs = 5000
# optimizer type : adam | sgd
optim = adam
learning_rate = 0.005
optim_weight_decay = 0.00001

[priors]
# Hyper-paramters of prior densities
ancestor_prior_hp = uniform
rates_prior_hp = uniform
freqs_prior_hp = uniform
branch_prior_hp = 0.01,1.
kappa_prior_hp = 1.,1.

[settings]
job_name = CoV_BP001AKL00001
# cpu | cuda | cuda:0
device = cpu
seed = 14
verbose = 1

[plotting]
plt_usetex = False
size_font = 16
print_xtick_every = 1000
